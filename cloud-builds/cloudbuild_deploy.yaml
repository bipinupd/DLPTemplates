steps:
    - name: 'gcr.io/${PROJECT_ID}/dlp_image'
      id: 'Unzip and Identify Wrapped Keys Required'
      entrypoint: bash
      args:
      - '-c'
      - |
        gsutil cp gs://${_ARTIFACT_REPO}/${_SHORT_SHA}/DLPTemplates.zip DLPTemplates.zip
        unzip DLPTemplates.zip
    - name: 'gcr.io/${PROJECT_ID}/dlp_image'
      id: 'Generate DeIdentification templates'
      entrypoint: bash
      args:
      - '-c'
      - |
        cd /workspace/DLPTemplates/scripts/generate_template
        mkdir /workspace/DLPTemplates/deIdentify_templates_output
        npm install
        node collect_secret.js -p ${_PROJECTID} -d ../../deIdentify_templates
    - name: 'gcr.io/${PROJECT_ID}/dlp_image'
      id: 'Deploy Artifacts'
      entrypoint: bash
      args:
      - '-c'
      - |
        cd /workspace/DLPTemplates
        deidentify_template=$(bash /workspace/DLPTemplates/scripts/deidentify_script.sh $_PROJECTID)
        deidentify_status=$?
        inspect_template=$(bash /workspace/DLPTemplates/scripts/inspect_script.sh $_PROJECTID)
        inspect_status=$?
        if [[ "$deidentify_status" -eq 0 ]] && [[ "$inspect_status" -eq 0 ]];
        then
          exit 0
        else
          exit -1
        fi
    - name: 'gcr.io/${PROJECT_ID}/dlp_image'
      entrypoint: bash
      args:
      - '-c'
      - |
        cd /workspace/DLPTemplates/tests
        if [[ $(ls ittest/ | wc -l) -gt 0 ]];
        then
          pytest -m smoke --project_id=$_PROJECTID -s
        fi
      id: 'IT/Smoke Test'